/**
* Generated by JitBlox - a visual web app builder that lets you build modern web apps using leading UI
* libraries.
* Upgrade to a Pro plan to remove this header, see https://www.jitblox.com/plans for more.
* 
* Check out this JitBlox project, Componentize your Tailwind app - final, at
* https://www.jitblox.com/project/LXuOtSfcRL/componentize-your-tailwind-app-final
*/

import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, RouterLink } from '@angular/router';
import { NgIcon, provideIcons } from '@ng-icons/core';
import { BlogPost } from '../../model';
import { BlogAPIService } from '../../services/blog-a-p-i.service';
import { combineLatest, Observable } from 'rxjs';
import { map, switchMap } from 'rxjs/operators';

@Component({
  selector: 'app-blog-post',
  standalone: true,
  templateUrl: './blog-post.component.html',
  imports: [RouterLink, NgIcon, CommonModule]
})
export class BlogPostComponent implements OnInit {
  public post$!: Observable<BlogPost | undefined>;

  constructor(
    private route: ActivatedRoute, 
    private blogAPIService: BlogAPIService
  ) {}

  public ngOnInit(): void {
    const routeParams = combineLatest([this.route.paramMap, this.route.queryParamMap]).pipe(map(([paramMap, queryParamMap]) => ({ params: paramMap, queryParams: queryParamMap })));


    this.post$ = routeParams.pipe(
      switchMap((paramMaps) => {
        const postId = paramMaps.params.get('postId');
        return this.blogAPIService.getPost(
          postId !== null ? postId : null
        );
      })
    );
  }
}
